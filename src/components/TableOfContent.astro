---
import type { MarkdownHeading } from 'astro';
import TableOfContentList from './TableOfContentList.astro';
import { buildHierarchy } from '../utils/markdown';

const { headings } = Astro.props as { headings: MarkdownHeading[] };
---

<aside class="px-8 text-wrap w-72 max-h-32">
  <z-toc>
    <h2 class="text-lg font-bold mb-2">On This Page</h2>
    <TableOfContentList headings={buildHierarchy(headings)} depth={0} />
  </z-toc>
</aside>

<script>
  export class TableOfContent extends HTMLElement {
    private _current = this.querySelector<HTMLAnchorElement>(
      'a[aria-current="true"]'
    );

    protected set current(link: HTMLAnchorElement) {
      if (link === this._current) {
        return;
      }

      if (this._current) {
        this._current.removeAttribute('aria-current');
      }

      link.setAttribute('aria-current', 'true');
      this._current = link;
    }

    private onIdle = (cb: IdleRequestCallback) =>
      (window.requestIdleCallback || ((cb) => setTimeout(cb, 1)))(cb);

    constructor() {
      super();
      this.onIdle(() => this.init());
    }

    init() {
      // TODO: Reimplement this.
    }
  }

  customElements.define('z-toc', TableOfContent);
</script>
