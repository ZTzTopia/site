---
import TableOfContentList from './TableOfContentList.astro';

type Headings = {
  depth: number;
  slug: string;
  text: string;
};

type Propss = {
  headings: Headings[];
};

const props: Propss = Astro.props;

interface Item {
  depth: number;
  slug: string;
  text: string;
}

interface Heading extends Item {
  children: Heading[];
}

interface Props {
  headings: Heading[];
}

function renderHeadingsAsJson(props: Propss): Heading[] {
  const { headings } = props;
  const stack: Heading[] = [];
  const result: Heading[] = [];

  headings.forEach(heading => {
    const { depth, slug, text } = heading;

    const newHeading: Heading = { depth, slug, text, children: [] };

    // Determine where to insert the new heading
    while (stack.length > 0 && stack[stack.length - 1].depth >= depth) {
      stack.pop(); // Pop higher or equal depth items
    }

    if (stack.length === 0) {
      result.push(newHeading); // Add to the root level
    } else {
      const parent = stack[stack.length - 1];
      parent.children.push(newHeading); // Add to the parent's children
    }

    stack.push(newHeading); // Add the current heading to the stack
  });

  return result;
}

const headings = renderHeadingsAsJson(props);
---

<h2 class="text-lg font-bold mb-2">Table of Contents</h2>
<TableOfContentList headings={headings} depth={0} />
