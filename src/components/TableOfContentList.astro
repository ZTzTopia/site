---
interface Item {
  depth: number;
  slug: string;
  text: string;
}

interface Heading extends Item {
  children: Heading[];
}

interface Props {
  headings: Heading[];
  depth: number;
}

const { headings, depth = 0 } = Astro.props as Props;
---

<ul class="pl-5 list-disc md:list-none md:pl-0">
  {
    headings.map((heading) => (
      <li>
        <a href={"#" + heading.slug} class="text-flexoki-base-600 dark:text-flexoki-base-500">
          <span>{heading.text}</span>
        </a>
        {heading.children.length > 0 && (
          <Astro.self headings={heading.children} depth={heading.depth + 1} />
        )}
      </li>
    ))
  }
</ul>

<style define:vars={{ depth }}>
  a {
		--pad-inline: 0.5rem;
		display: block;
		border-radius: 0.25rem;
		padding-block: 0.25rem;
		padding-inline: calc(0.375rem * (var(--depth) - 1)) var(--pad-inline);
		line-height: 1.25;
	}
</style>
