---
import type { HTMLAttributes } from "astro/types";
import Element from "./Element.astro";

interface Props
  extends HTMLAttributes<"button">,
    Omit<HTMLAttributes<"a">, "type"> {
  variant?: "primary" | "secondary" | "outline" | "ghost" | "link" | "text" | undefined;
  size?: "sm" | "default" | "lg" | "icon" | undefined;
}

const { variant = "primary", size = "default", ...rest } = Astro.props as Props;
console.log({...rest});
---

<Element
  class:list={`button variant-${variant} size-${size}`}
  as={rest.href ? "a" : "button"}
  {...rest}
>
  <div class="flex items-center gap-2">
    <slot />
  </div>
</Element>

<style is:global>
  .button {
    @apply px-4 py-2 rounded-md;

    &.variant-primary {
      @apply bg-flexoki-cyan-400 dark:bg-flexoki-cyan-400 text-flexoki-base-black;

      &:hover {
        @apply bg-flexoki-cyan-600 dark:bg-flexoki-cyan-600;
      }
    }

    &.variant-secondary {
      @apply bg-flexoki-base-100 dark:bg-flexoki-base-900 text-flexoki-base-black dark:text-flexoki-base-200;

      &:hover {
        @apply bg-flexoki-base-150 dark:bg-flexoki-base-850;
      }
    }

    &.variant-outline {
      @apply border border-flexoki-base-100 dark:border-flexoki-base-900 text-flexoki-base-black dark:text-flexoki-base-200;

      &:hover {
        @apply bg-flexoki-base-150 dark:bg-flexoki-base-850;
      }
    }

    &.variant-ghost {
      @apply text-flexoki-base-black dark:text-flexoki-base-200;

      &:hover {
        @apply bg-flexoki-base-150 dark:bg-flexoki-base-850;
      }
    }

    &.variant-link {
      @apply p-0 text-flexoki-base-black dark:text-flexoki-base-200;

      &:hover {
        @apply text-flexoki-cyan-600 dark:text-flexoki-cyan-400;
      }
    }

    &.variant-text {
      @apply p-0 text-flexoki-base-black dark:text-flexoki-base-200;
    }

    &.size-sm {
      @apply text-sm;
    }


    &.size-lg {
      @apply text-lg;
    }

    &.size-icon {
      @apply p-3;
    }
  }

  .size-default {
      @apply text-base;
    }
</style>
