---
import type { HTMLAttributes } from 'astro/types';
import { Icon } from 'astro-icon/components';
import Dropdown from './Dropdown.astro';

interface Item {
  label: string;
  href: string;
}

interface Props extends HTMLAttributes<'div'> {
  items: Item[];
}

const { items, ...rest } = Astro.props as Props;
---

<nav {...rest}>
  <ol class="flex flex-wrap gap-1 items-center text-sm capitalize break-words">
    {
      items && items.map((item, index) =>
        index === items.length - 1 
          ? (
            <li class="inline-flex items-center">
              <Icon name="lucide:chevron-right" />
            </li>
            <li class="inline-flex items-center">
              <span class="text-flexoki-cyan-600 dark:text-flexoki-cyan-400">{item.label}</span>
            </li>
          ) 
          : index === 2 && items.length > 4
            ? (
              <li class="inline-flex items-center">
                <Icon name="lucide:chevron-right" />
              </li>
              <li class="inline-flex items-center">
                <Dropdown>
                  <span slot="trigger" class="flex items-center justify-center hover:cursor-pointer">...</span>
                  <div class="flex flex-col p-1">
                    {/* Loop */}
                    {items.slice(1, items.length - index).map((item, index) => (
                      <a
                        href={item.href}
                        class="block px-4 py-2 rounded-md"
                      >
                        {decodeURIComponent(item.label)}
                      </a>
                    ))}
                  </div>
                </Dropdown>
              </li>
            )
            : (index == 0 || items.length < 4 || index >= items.length - 2) && (
              <Fragment>
                {
                  index !== 0 && (
                    <li class="inline-flex items-center">
                      <Icon name="lucide:chevron-right" />
                    </li>
                  )
                }
              </Fragment>
              <li class="inline-flex items-center">
                <a href={item.href} class="hover:text-flexoki-cyan-400 hover:dark:text-flexoki-cyan-600">{item.label}</a>
              </li>
            )
      )
    }
  </ol>
</nav>
