---
import type { HTMLAttributes } from 'astro/types';
import { Icon } from 'astro-icon/components';
import Dropdown from './Dropdown.astro';
import Element from './Element.astro';
import Button from './Button.astro';

interface Item {
  label: string;
  href: string;
}

interface Props extends HTMLAttributes<'div'> {
  items: Item[];
}

const { items, ...rest } = Astro.props as Props;
---

<Element as="nav" {...rest}>
  <ol class="flex flex-wrap gap-1 items-center text-sm capitalize break-words">
    {
      items && items.map((item, index) => {
        if (index === items.length - 1) {
          return (
            <li class="inline-flex items-center">
              <Icon name="lucide:chevron-right" />
            </li>
            <li class="inline-flex items-center">
              <span class="text-flexoki-light-cy dark:text-flexoki-dark-cy">{item.label}</span>
            </li>
          );
        }

        if (index === 1 && items.length > 4) {
          return (
            <li class="inline-flex items-center">
              <Icon name="lucide:chevron-right" />
            </li>
            <li class="inline-flex items-center">
              <Dropdown>
                <span slot="trigger" class="flex items-center justify-center hover:cursor-pointer">...</span>
                <div class="flex flex-col p-1">
                  {items.slice(1, items.length - index).map((item) => (
                    <Button
                      variant="ghost"
                      size="sm"
                      href={item.href}
                    >
                      {decodeURIComponent(item.label)}
                    </Button>
                  ))}
                </div>
              </Dropdown>
            </li>
          );
        }

        return (
          <Fragment>
            {
              index !== 0 && (
                <li class="inline-flex items-center">
                  <Icon name="lucide:chevron-right" />
                </li>
              )
            }
          </Fragment>
          <li class="inline-flex items-center">
            <a href={item.href} class="hover:text-flexoki-light-cy-2 hover:dark:text-flexoki-dark-cy-2">{item.label}</a>
          </li>
        )
      })
    }
  </ol>
</Element>
