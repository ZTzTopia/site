---
import { type CollectionEntry, getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import type { Page } from 'astro';
import EventCard from '../../components/EventCard.astro';
// import Pagination from '../../components/Pagination.astro';

export async function getStaticPaths({
  paginate,
}: {
  paginate: (paths: any[], options: { pageSize: number }) => any;
}) {
  const eventCollections = await getCollection('events');
  const sortedEventCollections = eventCollections.sort((a, b) => {
    return new Date(b.data.end as Date).getTime() - new Date(a.data.start as Date).getTime();
  });
  const paths = sortedEventCollections.map((event: CollectionEntry<'events'>) => {
    return event;
  });

  return paginate(paths, { pageSize: 20 });
}

interface Props {
  page: Page;
}

const { page } = Astro.props as Props;
---

<MainLayout title="Writeups">
  <div class="grid grid-cols-2 gap-2">
    {page.data.length === 0 && <p>No writeups found :(</p>}
    {
      [...page.data].map((event) => (
        <a
          href={`${Astro.url.pathname}/${event.id.split('/').slice(0, -1).join('/')}`}
        >
          <EventCard event={event} />
        </a>
      ))
    }
  </div>

  <!-- <div class="flex gap-1 justify-center">
    <Pagination page={page} />
  </div> -->
</MainLayout>
