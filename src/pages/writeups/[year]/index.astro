---
import { type CollectionEntry, getCollection } from 'astro:content';
import MainLayout from '../../../layouts/MainLayout.astro';
import EventCard from '../../../components/EventCard.astro';

export async function getStaticPaths() {
  const eventCollections = await getCollection('events');
  const years: string[] = [];

  eventCollections.forEach((event: CollectionEntry<'events'>) => {
    const slugs = event.id.split('/');
    if (slugs.length > 1) {
      const year = slugs[0];
      if (!year) {
        return;
      }

      if (!years.includes(year)) {
        years.push(year);
      }
    }
  });

  return years.map((year) => ({
    params: {
      year,
    },
  }));
}

interface Params {
  year: string;
}

const { year } = Astro.params as Params;

const eventCollections = await getCollection(
  'events',
  ({ id }) => id.split('/')[0] === year
);
const sortedEventCollections = eventCollections.sort((a, b) => {
  return (
    new Date(b.data.end as Date).getTime() -
    new Date(a.data.start as Date).getTime()
  );
});
---

<MainLayout title={`${year} Writeups`}>
  <div class="grid md:grid-cols-2 gap-2">
    {
      sortedEventCollections.length === 0 ? (
        <p>No events found :(</p>
      ) : (
        sortedEventCollections.map((event) => (
          <a
            href={`/writeups/${year}/${event.id.split('/').slice(1, -1).join('/')}`}
          >
            <EventCard event={event} />
          </a>
        ))
      )
    }
  </div>
</MainLayout>
